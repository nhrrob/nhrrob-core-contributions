{"version":3,"file":"index.js","mappings":"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","sources":["webpack://nhrcc-core-contributions/./src/SettingsPage.jsx","webpack://nhrcc-core-contributions/./src/api.js","webpack://nhrcc-core-contributions/external window \"React\"","webpack://nhrcc-core-contributions/external window [\"wp\",\"apiFetch\"]","webpack://nhrcc-core-contributions/external window [\"wp\",\"element\"]","webpack://nhrcc-core-contributions/webpack/bootstrap","webpack://nhrcc-core-contributions/webpack/runtime/compat get default export","webpack://nhrcc-core-contributions/webpack/runtime/define property getters","webpack://nhrcc-core-contributions/webpack/runtime/hasOwnProperty shorthand","webpack://nhrcc-core-contributions/webpack/runtime/make namespace object","webpack://nhrcc-core-contributions/./src/index.js"],"sourcesContent":["import { useState, useEffect } from '@wordpress/element';\nimport { getSettings, updateSettings } from './api';\n\nconst SettingsPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [formData, setFormData] = useState({\n    username: '',\n    cacheDuration: '3600',\n    postsPerPage: '10',\n  });\n  const [errors, setErrors] = useState({});\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    }\n    if (!formData.postsPerPage || parseInt(formData.postsPerPage) < 1) {\n      newErrors.postsPerPage = 'Must be a positive number';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSave = async () => {\n    if (!validateForm()) return;\n\n    setLoading(true);\n    try {\n      const response = await updateSettings(formData);\n\n      setNotification({\n        type: 'success',\n        message: response.message\n      });\n    } catch (error) {\n      setNotification({\n        type: 'error',\n        message: 'Error saving settings. Please try again later.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        const data = await getSettings();\n\n        setFormData(data);\n      } catch (error) {\n        setNotification({\n          type: 'error',\n          message: 'Error loading settings'\n        });\n      }\n    };\n\n    loadSettings();\n  }, []);\n\n  return (\n    <div className=\"nhrcc-core-contributions-settings-wrap\">\n      <h1 className=\"wp-heading-inline\">Core Contributions Settings</h1>\n      \n      {notification && (\n        <div className={`notice notice-${notification.type === 'success' ? 'success' : 'error'} is-dismissible`}>\n          <p>{notification.message}</p>\n          <button \n            type=\"button\" \n            className=\"notice-dismiss\"\n            onClick={() => setNotification(null)}\n          >\n            <span className=\"screen-reader-text\">Dismiss this notice</span>\n          </button>\n        </div>\n      )}\n\n      <div className=\"card\">\n        <h2>User Settings</h2>\n        <p className=\"description\">Configure the default user and display preferences</p>\n        <table className=\"form-table\">\n          <tbody>\n            <tr>\n              <th scope=\"row\">\n                <label htmlFor=\"username\">Default WordPress.org Username</label>\n              </th>\n              <td>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  className=\"regular-text\"\n                  value={formData?.username}\n                  onChange={(e) => setFormData({...formData, username: e.target.value})}\n                />\n                {errors.username && (\n                  <p className=\"description error\">{errors.username}</p>\n                )}\n                <p className=\"description\">This username will be used when no specific user is provided</p>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"card\">\n        <h2>Cache Settings</h2>\n        <p className=\"description\">Manage how long contribution data is stored</p>\n        <table className=\"form-table\">\n          <tbody>\n            <tr>\n              <th scope=\"row\">\n                <label htmlFor=\"cacheDuration\">Cache Duration</label>\n              </th>\n              <td>\n                <select\n                  id=\"cacheDuration\"\n                  value={formData?.cacheDuration}\n                  onChange={(e) => setFormData({...formData, cacheDuration: e.target.value})}\n                >\n                  <option value=\"1800\">30 Minutes</option>\n                  <option value=\"3600\">1 Hour</option>\n                  <option value=\"86400\">24 Hours</option>\n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      {/* <div className=\"card\">\n        <h2>Display Settings</h2>\n        <p className=\"description\">Customize how contributions are displayed</p>\n        <table className=\"form-table\">\n          <tbody>\n            <tr>\n              <th scope=\"row\">Show Avatars</th>\n              <td>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.showAvatars}\n                    onChange={(e) => setFormData({...formData, showAvatars: e.target.checked})}\n                  />\n                  Display user avatars next to contributions\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">\n                <label htmlFor=\"postsPerPage\">Posts Per Page</label>\n              </th>\n              <td>\n                <input\n                  type=\"number\"\n                  id=\"postsPerPage\"\n                  className=\"small-text\"\n                  value={formData.postsPerPage}\n                  onChange={(e) => setFormData({...formData, postsPerPage: e.target.value})}\n                />\n                {errors.postsPerPage && (\n                  <p className=\"description error\">{errors.postsPerPage}</p>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">\n                <label htmlFor=\"displayStyle\">Display Style</label>\n              </th>\n              <td>\n                <select\n                  id=\"displayStyle\"\n                  value={formData.displayStyle}\n                  onChange={(e) => setFormData({...formData, displayStyle: e.target.value})}\n                >\n                  <option value=\"grid\">Grid</option>\n                  <option value=\"list\">List</option>\n                  <option value=\"compact\">Compact</option>\n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div> */}\n\n      {/* <div className=\"card\">\n        <h2>Analytics Settings</h2>\n        <p className=\"description\">Configure analytics and tracking preferences</p>\n        <table className=\"form-table\">\n          <tbody>\n            <tr>\n              <th scope=\"row\">Enable Analytics</th>\n              <td>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.enableAnalytics}\n                    onChange={(e) => setFormData({...formData, enableAnalytics: e.target.checked})}\n                  />\n                  Collect anonymous usage data to improve the plugin\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div> */}\n\n      <p className=\"submit\">\n        <button \n          type=\"button\" \n          className=\"button button-primary\"\n          onClick={handleSave}\n          disabled={loading}\n        >\n          {loading ? 'Saving...' : 'Save Changes'}\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default SettingsPage;","import apiFetch from '@wordpress/api-fetch';\n\nexport const getSettings = async () => {\n    try {\n        const settings = await apiFetch({ \n            path: '/nhrcc-core-contributions/v1/settings',\n            method: 'GET',\n        });\n\n        return settings;\n\n    } catch (error) {\n        console.error('Error fetching settings:', error);\n        throw error;\n    }\n};\n\nexport const updateSettings = async (settings) => {\n    try {\n        return await apiFetch({\n            path: '/nhrcc-core-contributions/v1/settings',\n            method: 'POST',\n            data: settings\n        });\n    } catch (error) {\n        console.error('Error updating settings:', error);\n        throw error;\n    }\n};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot } from '@wordpress/element';\nimport SettingsPage from './SettingsPage';\n\n\n// Initialize the app\nconst init = () => {\n    const container = document.getElementById('nhrcc-admin-settings');\n    if (container) {\n        const root = createRoot(container);\n        root.render(<SettingsPage />);\n    }\n};\n\n// Wait for DOM to be ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', init);\n} else {\n    init();\n}"],"names":["useState","useEffect","getSettings","updateSettings","SettingsPage","loading","setLoading","notification","setNotification","formData","setFormData","username","cacheDuration","postsPerPage","errors","setErrors","validateForm","newErrors","trim","parseInt","Object","keys","length","handleSave","response","type","message","error","loadSettings","data","createElement","className","onClick","scope","htmlFor","id","value","onChange","e","target","disabled","apiFetch","settings","path","method","console","createRoot","init","container","document","getElementById","root","render","readyState","addEventListener"],"sourceRoot":""}